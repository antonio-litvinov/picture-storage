<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureLogin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhQAE8APcAAMDN/1R5/1B2/16B/5Co/2SF/22M/7nI/77M/1J3/7XF/5iu/2CD/4Cc/7zL/42l
        /7vK/3mW/4Oe/2mK/2eI/3SS/7DB/050/6y//6i7/6G2/2+P/6W4/7rJ/6q8/8LP/5Ws/5+0/4qj/4ii
        /3KR/5Or/0No+X2Z/zBU61h8/5yy/3uY/67A/z1c6Yag/7fH/1x//5uw/0xy/6O3/2KE/1p+/3aU/0Zu
        /zNZ80Zp9kBp/1l9/0lw/0Ns/z5c5f+IGGuL/y9R50tr8rTE/8TQ/1d7/0Fd5C1N4jJW7/j5+rLD/8nV
        /ytJ3cXR/z5n/1Z7//////+NIUNi7MbS/ztl/kpp7kZm7TBO4sfT/0Bf6zNR5ERq/Jubnjhh+/6bN05u
        8U1x+/6ULzlW40lu+zhY6MbGxzxh9TVd98zX/zhd8ktv+kRf462trv25UTVY7XyBkP2jPP2mSI+RlYWI
        l6Wlpfnn2MO+wf3LZY6WrE9y+UBl+PynVtbW1uDf3pqhs/zDXff180Zs+v3yjv7qhOfo6FZy7Vx+/YWF
        g/7gfLW1trmMSVJy8vrYuPvGlU9w9cvMzv2uYfy/h/ru43V4gf7UbfvNok1p5lp7+vny7HBrZUJl8+rs
        7v/8mP2yS/y3daOotdugQOubOPzYdfnew0Vq+E9s6vviyb3D5Pz8/f6dQsmYS0lk5v2yafvSq//8wcR+
        GLq7wKiz1uywTPHw8cDM+Vd5+OqmQN+KI/rysL/A2P29eqOsy5ylxFN1+LK51bWCNcibaq61y7/I8KuV
        bL2iiKyyu+aTLFl6+amp2cmzq7nE7qaciM2pi7G96N6fW9WRNKJwGbqlZ77J+MbS+///+MLM8M6tb9rS
        jufy+bjk/P/+7cTI6f/91/rjnubLZbOpqu+3esPP+9u+cFl8/Ft9/dbAo5KHdFx9/MbQ9LS44szN5+PH
        n96rgtXo9eK4U/Dpiu7ZvKrM4taoUZZ7SFd39lV2+KzW+JaYwtbX5efVpMTT3Fl+/+ipZvX1+vH4/SlH
        2ywAAAAAQAE8AAAI/wCHDFFAkOCLgwcSJuzAEIJDhw4iSpxIMeJDhww7KEx48EVBggKViLRA0gKLkxhS
        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
</value>
  </data>
</root>